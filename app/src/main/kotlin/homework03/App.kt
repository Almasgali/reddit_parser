/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package homework03

import homework03.serializer.csvSerialize
import kotlinx.coroutines.*
import java.io.File

class App {

    private val redditClient: RedditClient = RedditClient()

    suspend fun getCommentsAndSubjects(name: String) {
        withContext(Dispatchers.IO) {
            val subtopics = redditClient.getTopic(name).getSubtopicsList()
            File("--comments.csv").createNewFile()
            File("--subjects.csv").createNewFile()
            val subjects = async {
                File("--subjects.csv").appendText(
                    csvSerialize(
                        subtopics,
                        DataClasses.BeautySubtopic::class
                    )
                )
            }
            val comments = async {
                for (t in subtopics) {
                    File("--comments.csv").appendText(
                        csvSerialize(
                            redditClient.getComments(t.permalink).getLinearComments(),
                            DataClasses.LinearComment::class
                        )
                    )
                }
            }
            subjects.await()
            comments.await()
        }
    }
}

fun main(args: Array<String>) = runBlocking(Dispatchers.IO) {
    if (args.isEmpty()) {
        println("Empty arguments.")
    } else {
        val app = App()
        for (name in args) {
            app.getCommentsAndSubjects(name)
        }
    }
}
